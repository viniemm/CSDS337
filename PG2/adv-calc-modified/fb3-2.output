Terminals unused in grammar

    '%'


Grammar

    0 $accept: calclist $end

    1 stmt: IF exp THEN list
    2     | IF exp THEN list ELSE list
    3     | WHILE exp DO list
    4     | exp

    5 list: %empty
    6     | stmt ';' list

    7 exp: exp CMP exp
    8    | exp '+' exp
    9    | exp '-' exp
   10    | exp '*' exp
   11    | exp '/' exp
   12    | exp "mod" exp
   13    | exp '^' exp
   14    | '|' exp
   15    | '(' exp ')'
   16    | '-' exp
   17    | NUMBER
   18    | FUNC '(' explist ')'
   19    | NAME
   20    | NAME '=' exp
   21    | NAME '(' explist ')'

   22 explist: exp
   23        | exp ',' explist

   24 symlist: NAME
   25        | NAME ',' symlist

   26 calclist: %empty
   27         | calclist stmt EOL
   28         | calclist LET NAME '(' symlist ')' '=' list EOL
   29         | calclist error EOL


Terminals, with rules where they appear

    $end (0) 0
    '%' (37)
    '(' (40) 15 18 21 28
    ')' (41) 15 18 21 28
    '*' (42) 10
    '+' (43) 8
    ',' (44) 23 25
    '-' (45) 9 16
    '/' (47) 11
    ';' (59) 6
    '=' (61) 20 28
    '^' (94) 13
    '|' (124) 14
    error (256) 29
    NUMBER <d> (258) 17
    NAME <s> (259) 19 20 21 24 25 28
    FUNC <fn> (260) 18
    EOL (261) 27 28 29
    IF (262) 1 2
    THEN (263) 1 2
    ELSE (264) 2
    WHILE (265) 3
    DO (266) 3
    LET (267) 28
    CMP <fn> (268) 7
    "mod" (269) 12
    UMINUS (270)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    stmt <a> (29)
        on left: 1 2 3 4
        on right: 6 27
    list <a> (30)
        on left: 5 6
        on right: 1 2 3 6 28
    exp <a> (31)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
        on right: 1 2 3 4 7 8 9 10 11 12 13 14 15 16 20 22 23
    explist <a> (32)
        on left: 22 23
        on right: 18 21 23
    symlist <sl> (33)
        on left: 24 25
        on right: 25 28
    calclist (34)
        on left: 26 27 28 29
        on right: 0 27 28 29


State 0

    0 $accept: . calclist $end

    $default  reduce using rule 26 (calclist)

    calclist  go to state 1


State 1

    0 $accept: calclist . $end
   27 calclist: calclist . stmt EOL
   28         | calclist . LET NAME '(' symlist ')' '=' list EOL
   29         | calclist . error EOL

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    stmt  go to state 13
    exp   go to state 14


State 2

    0 $accept: calclist $end .

    $default  accept


State 3

   29 calclist: calclist error . EOL

    EOL  shift, and go to state 15


State 4

   17 exp: NUMBER .

    $default  reduce using rule 17 (exp)


State 5

   19 exp: NAME .
   20    | NAME . '=' exp
   21    | NAME . '(' explist ')'

    '='  shift, and go to state 16
    '('  shift, and go to state 17

    $default  reduce using rule 19 (exp)


State 6

   18 exp: FUNC . '(' explist ')'

    '('  shift, and go to state 18


State 7

    1 stmt: IF . exp THEN list
    2     | IF . exp THEN list ELSE list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 19


State 8

    3 stmt: WHILE . exp DO list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 20


State 9

   28 calclist: calclist LET . NAME '(' symlist ')' '=' list EOL

    NAME  shift, and go to state 21


State 10

   16 exp: '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 22


State 11

   14 exp: '|' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 23


State 12

   15 exp: '(' . exp ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 24


State 13

   27 calclist: calclist stmt . EOL

    EOL  shift, and go to state 25


State 14

    4 stmt: exp .
    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    CMP    shift, and go to state 26
    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    $default  reduce using rule 4 (stmt)


State 15

   29 calclist: calclist error EOL .

    $default  reduce using rule 29 (calclist)


State 16

   20 exp: NAME '=' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 33


State 17

   21 exp: NAME '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 34
    explist  go to state 35


State 18

   18 exp: FUNC '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 34
    explist  go to state 36


State 19

    1 stmt: IF exp . THEN list
    2     | IF exp . THEN list ELSE list
    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    THEN   shift, and go to state 37
    CMP    shift, and go to state 26
    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32


State 20

    3 stmt: WHILE exp . DO list
    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    DO     shift, and go to state 38
    CMP    shift, and go to state 26
    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32


State 21

   28 calclist: calclist LET NAME . '(' symlist ')' '=' list EOL

    '('  shift, and go to state 39


State 22

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp
   16    | '-' exp .

    $default  reduce using rule 16 (exp)


State 23

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp
   14    | '|' exp .

    $default  reduce using rule 14 (exp)


State 24

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp
   15    | '(' exp . ')'

    CMP    shift, and go to state 26
    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32
    ')'    shift, and go to state 40


State 25

   27 calclist: calclist stmt EOL .

    $default  reduce using rule 27 (calclist)


State 26

    7 exp: exp CMP . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 41


State 27

    8 exp: exp '+' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 42


State 28

    9 exp: exp '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 43


State 29

   10 exp: exp '*' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 44


State 30

   11 exp: exp '/' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 45


State 31

   12 exp: exp "mod" . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 46


State 32

   13 exp: exp '^' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 47


State 33

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp
   20    | NAME '=' exp .

    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    $default  reduce using rule 20 (exp)


State 34

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp
   22 explist: exp .
   23        | exp . ',' explist

    CMP    shift, and go to state 26
    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32
    ','    shift, and go to state 48

    $default  reduce using rule 22 (explist)


State 35

   21 exp: NAME '(' explist . ')'

    ')'  shift, and go to state 49


State 36

   18 exp: FUNC '(' explist . ')'

    ')'  shift, and go to state 50


State 37

    1 stmt: IF exp THEN . list
    2     | IF exp THEN . list ELSE list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 5 (list)

    stmt  go to state 51
    list  go to state 52
    exp   go to state 14


State 38

    3 stmt: WHILE exp DO . list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 5 (list)

    stmt  go to state 51
    list  go to state 53
    exp   go to state 14


State 39

   28 calclist: calclist LET NAME '(' . symlist ')' '=' list EOL

    NAME  shift, and go to state 54

    symlist  go to state 55


State 40

   15 exp: '(' exp ')' .

    $default  reduce using rule 15 (exp)


State 41

    7 exp: exp . CMP exp
    7    | exp CMP exp .
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    '+'    shift, and go to state 27
    '-'    shift, and go to state 28
    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    CMP  error (nonassociative)

    $default  reduce using rule 7 (exp)


State 42

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    8    | exp '+' exp .
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    $default  reduce using rule 8 (exp)


State 43

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
    9    | exp '-' exp .
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    '*'    shift, and go to state 29
    '/'    shift, and go to state 30
    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    $default  reduce using rule 9 (exp)


State 44

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   10    | exp '*' exp .
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp

    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    $default  reduce using rule 10 (exp)


State 45

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   11    | exp '/' exp .
   12    | exp . "mod" exp
   13    | exp . '^' exp

    "mod"  shift, and go to state 31
    '^'    shift, and go to state 32

    $default  reduce using rule 11 (exp)


State 46

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   12    | exp "mod" exp .
   13    | exp . '^' exp

    $default  reduce using rule 12 (exp)


State 47

    7 exp: exp . CMP exp
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '*' exp
   11    | exp . '/' exp
   12    | exp . "mod" exp
   13    | exp . '^' exp
   13    | exp '^' exp .

    $default  reduce using rule 13 (exp)


State 48

   23 explist: exp ',' . explist

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 34
    explist  go to state 56


State 49

   21 exp: NAME '(' explist ')' .

    $default  reduce using rule 21 (exp)


State 50

   18 exp: FUNC '(' explist ')' .

    $default  reduce using rule 18 (exp)


State 51

    6 list: stmt . ';' list

    ';'  shift, and go to state 57


State 52

    1 stmt: IF exp THEN list .
    2     | IF exp THEN list . ELSE list

    ELSE  shift, and go to state 58

    $default  reduce using rule 1 (stmt)


State 53

    3 stmt: WHILE exp DO list .

    $default  reduce using rule 3 (stmt)


State 54

   24 symlist: NAME .
   25        | NAME . ',' symlist

    ','  shift, and go to state 59

    $default  reduce using rule 24 (symlist)


State 55

   28 calclist: calclist LET NAME '(' symlist . ')' '=' list EOL

    ')'  shift, and go to state 60


State 56

   23 explist: exp ',' explist .

    $default  reduce using rule 23 (explist)


State 57

    6 list: stmt ';' . list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 5 (list)

    stmt  go to state 51
    list  go to state 61
    exp   go to state 14


State 58

    2 stmt: IF exp THEN list ELSE . list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 5 (list)

    stmt  go to state 51
    list  go to state 62
    exp   go to state 14


State 59

   25 symlist: NAME ',' . symlist

    NAME  shift, and go to state 54

    symlist  go to state 63


State 60

   28 calclist: calclist LET NAME '(' symlist ')' . '=' list EOL

    '='  shift, and go to state 64


State 61

    6 list: stmt ';' list .

    $default  reduce using rule 6 (list)


State 62

    2 stmt: IF exp THEN list ELSE list .

    $default  reduce using rule 2 (stmt)


State 63

   25 symlist: NAME ',' symlist .

    $default  reduce using rule 25 (symlist)


State 64

   28 calclist: calclist LET NAME '(' symlist ')' '=' . list EOL

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 5 (list)

    stmt  go to state 51
    list  go to state 65
    exp   go to state 14


State 65

   28 calclist: calclist LET NAME '(' symlist ')' '=' list . EOL

    EOL  shift, and go to state 66


State 66

   28 calclist: calclist LET NAME '(' symlist ')' '=' list EOL .

    $default  reduce using rule 28 (calclist)
